#!/usr/bin/env bash

SCRIPTS_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )" 
 # Get root directory of project
PROJECT_DIR=$(dirname $SCRIPTS_DIR)            

cd $PROJECT_DIR

echo
echo "-- cd $PROJECT_DIR"
echo "-- pwd"
pwd

# #################################### 1. Install req'ments #########################################

echo
echo "---- 1) 1. Install req'ments"
cd $PROJECT_DIR

# echo
# echo "-- apt-get install gcc-5 g++-5"
# sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
# sudo apt-get update
# sudo apt-get install gcc-5 g++-5    
# sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 60 --slave /usr/bin/g++ g++ /usr/bin/g++-5

echo
echo "sudo apt-get update"
sudo apt-get update

echo
echo "-- sudo apt-get install cppcheck"  
sudo apt-get install cppcheck
echo "-- cppcheck --version"  
cppcheck --version
exit 1


echo
echo "-- gcc -v"  
gcc -v

echo
echo "-- dl scons"                  
wget https://ftp.osuosl.org/pub/blfs/conglomeration/scons/scons-2.5.1.tar.gz
echo
echo "-- pwd"                  
pwd
echo "-- ls -l"                  
ls -l

echo
echo "-- unzip scons"
tar -xzf scons*

echo
echo "-- install scons"                  
sudo python scons-2.5.1/setup.py install > sclogs

echo
echo "-- scons -v"                  
scons -v    

echo
echo "-- a) git clone Qt_for_CI... "
git clone https://github.com/simsekgokhan/Qt_for_CI.git
echo
echo "-- mv Qt_for_CI/* ."
mv Qt_for_CI/*.gz .

echo 
echo "mkdir -p Qt5.9.3/5.9.3/"
mkdir -p Qt5.9.3/5.9.3/

echo
echo "-- tar -xzf qt_5.9.3_gcc_64.tar.gz -C Qt5.9.3/5.9.3/"
tar -xzf qt_5.9.3_gcc_64.tar.gz -C Qt5.9.3/5.9.3/

echo
echo "-- tar -xzf openssl-1.0.2o_built_linux.tar.gz"
tar -xzf openssl-1.0.2o_built_linux.tar.gz

echo
echo "sudo apt-get update"
sudo apt-get update

echo
echo "sudo apt-get install libgl-dev"
sudo apt-get install libgl-dev

###########################  2. Build robo-shell ##################################################

echo
echo "---- 2) Build robo-shell"
cd $PROJECT_DIR
echo
echo "-- pwd"
pwd
echo
echo "-- a) git clone robo-shell... "
git clone https://github.com/paralect/robomongo-shell.git

echo
echo "-- cd robomongo-shell"
cd robomongo-shell
echo "-- pwd"
pwd
echo "-- ll"
ls -l

export ROBOMONGO_CMAKE_PREFIX_PATH="$PROJECT_DIR/Qt5.9.3/5.9.3/gcc_64/;$PROJECT_DIR/robomongo-shell;$PROJECT_DIR/openssl-1.0.2o"
echo
echo "-- ROBOMONGO_CMAKE_PREFIX_PATH:"
echo $ROBOMONGO_CMAKE_PREFIX_PATH                           

echo
echo "-- pip install"
pip install --user -r etc/pip/dev-requirements.txt

echo
echo "-- chmod +x bin/*"
chmod +x bin/*

echo
echo "-- bin/build"
bin/build 

###########################  4. robo build ##########################################
# https://github.com/simsekgokhan/Qt_for_CI

echo
echo "---- 4) robo"
cd $PROJECT_DIR  

echo 
echo "-- bin/configure"
bin/configure 

echo 
echo "-- bin/build"
bin/build 

###########################  5. robo pack ##########################################

echo 
echo "-- bin/pack"
bin/pack

echo 
echo "-- ll build/release/package/"
ls -l build/release/package/

echo
echo "-- gcc -v"  
gcc -v

###########################  6. run robo-unit-tests ################################

echo 
echo "-- bin/run_tests"
bin/run_tests

################################ END #############################################

# --------------------------- END ------------------------
# echo "-- ll aft"
# pwd
# ls -l

echo
echo "----- DONE ----"

